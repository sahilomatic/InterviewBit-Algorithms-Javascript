/**

https://leetcode.com/problems/validate-binary-search-tree/

 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */

function checkBST(root, l, r){
if(!root ){return true;}
if(root.val>l && root.val<r){
    let isLBST = checkBST(root.left, l, root.val);
    let isRBST = checkBST(root.right,  root.val, r);

    if(isLBST && isRBST){
        return true;
    }

}

return false;

}

var isValidBST = function(root) {
    return checkBST(root,Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);
};
